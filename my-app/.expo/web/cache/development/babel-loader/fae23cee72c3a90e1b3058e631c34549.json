{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar API = 'http://192.168.1.14:3000/tasks';\nexport var getTasks = function getTasks() {\n  var res;\n  return _regeneratorRuntime.async(function getTasks$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch(API));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 6:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var saveTask = function saveTask(newTask) {\n  var res;\n  return _regeneratorRuntime.async(function saveTask$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(fetch(API, {\n            method: 'POST',\n            headers: {\n              Accept: 'application/json',\n              \"Content-Type\": 'application/json'\n            },\n            body: JSON.stringify(newTask)\n          }));\n\n        case 2:\n          res = _context2.sent;\n          console.log('save task');\n          _context2.next = 6;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 6:\n          return _context2.abrupt(\"return\", _context2.sent);\n\n        case 7:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var deleteTask = function deleteTask(id) {\n  var res;\n  return _regeneratorRuntime.async(function deleteTask$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return _regeneratorRuntime.awrap(fetch(API + '/' + id, {\n            method: 'DELETE'\n          }));\n\n        case 2:\n          res = _context3.sent;\n\n        case 3:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var getTask = function getTask(id) {\n  var res;\n  return _regeneratorRuntime.async(function getTask$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return _regeneratorRuntime.awrap(fetch(API + '/' + id, {\n            method: 'GET'\n          }));\n\n        case 2:\n          res = _context4.sent;\n          _context4.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          return _context4.abrupt(\"return\", _context4.sent);\n\n        case 6:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var updateTask = function updateTask(id, newTask) {\n  var res;\n  return _regeneratorRuntime.async(function updateTask$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return _regeneratorRuntime.awrap(fetch(API, {\n            method: 'UPDATE',\n            headers: {\n              Accept: 'application/json',\n              \"Content-Type\": 'application/json'\n            },\n            body: JSON.stringify(newTask)\n          }));\n\n        case 2:\n          res = _context5.sent;\n\n        case 3:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};","map":{"version":3,"sources":["D:/UADE/2021/fatz/react-native-mysql-tasks/my-app/api.js"],"names":["API","getTasks","fetch","res","json","saveTask","newTask","method","headers","Accept","body","JSON","stringify","console","log","deleteTask","id","getTask","updateTask"],"mappings":";AACA,IAAMA,GAAG,GAAG,gCAAZ;AAEA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEFC,KAAK,CAACF,GAAD,CAFH;;AAAA;AAEdG,UAAAA,GAFc;AAAA;AAAA,2CAIPA,GAAG,CAACC,IAAJ,EAJO;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAjB;AAOP,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACFJ,KAAK,CAACF,GAAD,EAAK;AAACO,YAAAA,MAAM,EAAC,MAAR;AAC5BC,YAAAA,OAAO,EAAC;AAACC,cAAAA,MAAM,EAAC,kBAAR;AAA2B,8BAAe;AAA1C,aADoB;AAE5BC,YAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,OAAf;AAFsB,WAAL,CADH;;AAAA;AACdH,UAAAA,GADc;AAKxBU,UAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AALwB;AAAA,2CAOPX,GAAG,CAACC,IAAJ,EAPO;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAjB;AAUP,OAAO,IAAMW,UAAU,GAAG,SAAbA,UAAa,CAAOC,EAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAGJd,KAAK,CAACF,GAAG,GAAG,GAAN,GAAYgB,EAAb,EAAgB;AACvCT,YAAAA,MAAM,EAAC;AADgC,WAAhB,CAHD;;AAAA;AAGhBJ,UAAAA,GAHgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAnB;AAUP,OAAO,IAAMc,OAAO,GAAG,SAAVA,OAAU,CAAOD,EAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACDd,KAAK,CAACF,GAAG,GAAG,GAAN,GAAYgB,EAAb,EAAgB;AACnCT,YAAAA,MAAM,EAAC;AAD4B,WAAhB,CADJ;;AAAA;AACbJ,UAAAA,GADa;AAAA;AAAA,2CAINA,GAAG,CAACC,IAAJ,EAJM;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAhB;AAOP,OAAO,IAAMc,UAAU,GAAG,SAAbA,UAAa,CAAOF,EAAP,EAAUV,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACJJ,KAAK,CAACF,GAAD,EAAK;AAACO,YAAAA,MAAM,EAAC,QAAR;AAC5BC,YAAAA,OAAO,EAAC;AAACC,cAAAA,MAAM,EAAC,kBAAR;AAA2B,8BAAe;AAA1C,aADoB;AAE5BC,YAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,OAAf;AAFsB,WAAL,CADD;;AAAA;AAChBH,UAAAA,GADgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAnB","sourcesContent":["\r\nconst API = 'http://192.168.1.14:3000/tasks'\r\n\r\nexport const getTasks = async () => {\r\n    \r\n    const res = await fetch(API)\r\n   \r\n    return await res.json()\r\n}\r\n\r\nexport const saveTask = async (newTask) => {\r\n    const res = await fetch(API,{method:'POST',\r\n    headers:{Accept:'application/json',\"Content-Type\":'application/json'},\r\n    body: JSON.stringify(newTask)\r\n});\r\nconsole.log('save task')\r\n \r\n    return await res.json()\r\n}\r\n\r\nexport const deleteTask = async (id) => {\r\n\r\n \r\n    const res = await fetch(API + '/' + id,{\r\n    method:'DELETE',\r\n\r\n    })\r\n   \r\n}\r\n\r\nexport const getTask = async (id) => {\r\n    const res = await fetch(API + '/' + id,{\r\n        method:'GET',\r\n    })\r\n    return await res.json()\r\n}\r\n\r\nexport const updateTask = async (id,newTask) => {\r\n    const res = await fetch(API,{method:'UPDATE',\r\n    headers:{Accept:'application/json',\"Content-Type\":'application/json'},\r\n    body: JSON.stringify(newTask)\r\n});\r\n}\r\n/*\r\nPOST {{api}}\r\nContent-Type: application/json\r\n\r\n{\r\n    \"title\":\"hacer tarea\",\r\n    \"description\":\"bla bla bla bla\"\r\n}\r\n*/"]},"metadata":{},"sourceType":"module"}