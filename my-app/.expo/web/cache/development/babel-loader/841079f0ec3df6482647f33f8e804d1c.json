{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar API = 'http://localhost:3000/tasks';\nexport var getTasks = function getTasks() {\n  var res;\n  return _regeneratorRuntime.async(function getTasks$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch(API));\n\n        case 2:\n          res = _context.sent;\n          console.log(res);\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 6:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var saveTask = function saveTask(newTask) {\n  var res;\n  return _regeneratorRuntime.async(function saveTask$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(fetch(API, {\n            method: 'POST',\n            header: {\n              Accept: 'application/json',\n              \"Content-Type\": 'application/json'\n            }\n          }));\n\n        case 2:\n          res = _context2.sent;\n\n          body: JSON.stringify(newtask);\n\n          _context2.next = 6;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 6:\n          return _context2.abrupt(\"return\", _context2.sent);\n\n        case 7:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};","map":{"version":3,"sources":["D:/UADE/2021/fatz/react-native-mysql-tasks/my-app/api.js"],"names":["API","getTasks","fetch","res","console","log","json","saveTask","newTask","method","header","Accept","body","JSON","stringify","newtask"],"mappings":";AACA,IAAMA,GAAG,GAAG,6BAAZ;AAEA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEFC,KAAK,CAACF,GAAD,CAFH;;AAAA;AAEdG,UAAAA,GAFc;AAGpBC,UAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AAHoB;AAAA,2CAIPA,GAAG,CAACG,IAAJ,EAJO;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAjB;AAOP,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACFN,KAAK,CAACF,GAAD,EAAK;AAACS,YAAAA,MAAM,EAAC,MAAR;AAAeC,YAAAA,MAAM,EAAC;AAACC,cAAAA,MAAM,EAAC,kBAAR;AAA2B,8BAAe;AAA1C;AAAtB,WAAL,CADH;;AAAA;AACdR,UAAAA,GADc;;AAEpBS,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeC,OAAf;;AAFc;AAAA,2CAGPZ,GAAG,CAACG,IAAJ,EAHO;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAjB","sourcesContent":["\r\nconst API = 'http://localhost:3000/tasks'\r\n\r\nexport const getTasks = async () => {\r\n    \r\n    const res = await fetch(API)\r\n    console.log(res)\r\n    return await res.json()\r\n}\r\n\r\nexport const saveTask = async (newTask) => {\r\n    const res = await fetch(API,{method:'POST',header:{Accept:'application/json',\"Content-Type\":'application/json'}})\r\n    body: JSON.stringify(newtask)\r\n    return await res.json()\r\n}\r\n/*\r\nPOST {{api}}\r\nContent-Type: application/json\r\n\r\n{\r\n    \"title\":\"hacer tarea\",\r\n    \"description\":\"bla bla bla bla\"\r\n}\r\n*/"]},"metadata":{},"sourceType":"module"}